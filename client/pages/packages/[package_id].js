import { Container, Row, Col, Card, Button } from "react-bootstrap";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { ENROLL_USER_COURSE, GET_SINGLE_PACKAGES } from "../../utils/queries";
import { toast } from "react-toastify";
import { useAuth } from "../../context/authContext";
import ALink from "../../components/ALink";
export default function SinglePackage() {
  const router = useRouter();
  const package_id = router.query["package_id"];
  const [pkg, setPkg] = useState({ loading: true, data: {} });
  const auth = useAuth();

  // useEffect(() => {
  //   const x =
  //     auth.user &&
  //     auth.user.Packages.some((pkg) => pkg.id === parseInt(package_id));

  //   console.log(auth.user.Packages, package_id);
  //   console.log(x);
  // }, [auth.isAuth]);

  const handle_enroll = async (e) => {
    e.preventDefault();
    console.log("Hehe");
    const enrollPromise = new Promise(async (res, rej) => {
      try {
        const enroll = await ENROLL_USER_COURSE({ PackageId: package_id });
        if (enroll.status === "error") throw enroll;
        res();
        router.push("/confirmation");
      } catch (error) {
        console.error(error);
        rej();
      }
    });
    toast.promise(enrollPromise, {
      success: "Successfully Enrolled!",
      error: "There Was An Error While Enrolling You",
      pending: "Loading",
    });
  };

  useEffect(async () => {
    try {
      if (package_id) {
        const pkg_res = await GET_SINGLE_PACKAGES(package_id);
        if (pkg_res.status === "error") throw pkg_res;
        setPkg({ loading: false, data: pkg_res.detail });
      }
    } catch (error) {
      console.error(error);
    }
  }, [package_id]);

  return (
    <Container className="py-5">
      <Head>
        <title>Package - {pkg.loading === false && pkg.data.name} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {pkg.loading === true && <p>Loading...</p>}
      {pkg.loading === false && (
        <Row>
          <Col className="col-12">
            <Card.Img src="/images/packages/1.jpg" variant="top" />
          </Col>
          <Col className="col-12">
            <h1 className="py-3">{pkg.data?.name}</h1>
          </Col>
          <Col className="col-12">
            <p className="py-3">{pkg.data?.description}</p>
          </Col>
          <Col className="col-12 pb-3">
            <dl class="row mb-0">
              <dt class="col-sm-3">Package Name</dt>
              <dd class="col-sm-9">{pkg.data?.name}</dd>

              <dt class="col-sm-3">Price</dt>
              <dd class="col-sm-9">Rs. {pkg.data?.price}</dd>
              <dt class="col-sm-3">Duration</dt>
              <dd class="col-sm-9">{pkg.data?.duration}</dd>
            </dl>
            <div className="mt-3">
              {auth.isAuth === false && (
                <ALink href={`/auth/login?redirect=/packages/${package_id}`}>
                  <Button>Login</Button>
                </ALink>
              )}
              {auth.isAuth === true &&
                auth.user.Packages.filter(
                  (pkg) => pkg.id === parseInt(package_id)
                ).length <= 0 && (
                  <Button
                    className="btn btn-primary"
                    onClick={(e) => {
                      handle_enroll(e);
                    }}
                  >
                    Enroll Now!
                  </Button>
                )}
              {auth.isAuth === true &&
                auth.user.Packages.filter(
                  (pkg) => pkg.id === parseInt(package_id)
                ).length > 0 && (
                  <div className="alert alert-success">
                    Hurray!! You Are Already Enrolled In This Package
                  </div>
                )}
            </div>
          </Col>
        </Row>
      )}
    </Container>
  );
}
